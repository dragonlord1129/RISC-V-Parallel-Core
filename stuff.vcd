$date
	Thu Nov 21 18:04:45 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fetch_cycle_tb $end
$var wire 32 ! PCPlus4D [31:0] $end
$var wire 32 " PCD [31:0] $end
$var wire 32 # InstrD [31:0] $end
$var reg 1 $ PCSrcE $end
$var reg 32 % PCTargetE [31:0] $end
$var reg 1 & clk $end
$var reg 1 ' rst $end
$scope module dut $end
$var wire 32 ( InstrD [31:0] $end
$var wire 32 ) PCD [31:0] $end
$var wire 32 * PCPlus4D [31:0] $end
$var wire 1 $ PCSrcE $end
$var wire 32 + PCTargetE [31:0] $end
$var wire 1 & clk $end
$var wire 1 ' rst $end
$var wire 32 , PC_F [31:0] $end
$var wire 32 - PCPlus4F [31:0] $end
$var wire 32 . PCF [31:0] $end
$var wire 32 / InstrF [31:0] $end
$var reg 32 0 InstrF_reg [31:0] $end
$var reg 32 1 PCF_reg [31:0] $end
$var reg 32 2 PCPlus4F_reg [31:0] $end
$scope module Instruction_Memory $end
$var wire 1 ' rst $end
$var wire 32 3 RD [31:0] $end
$var wire 32 4 A [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 & clk $end
$var wire 1 ' rst $end
$var wire 32 5 PC_next [31:0] $end
$var reg 32 6 PC [31:0] $end
$upscope $end
$scope module PC_Adder $end
$var wire 32 7 a [31:0] $end
$var wire 32 8 b [31:0] $end
$var wire 32 9 c [31:0] $end
$upscope $end
$scope module PC_Mux $end
$var wire 32 : a [31:0] $end
$var wire 32 ; b [31:0] $end
$var wire 1 $ s $end
$var wire 32 < c [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx <
bx ;
b100 :
b100 9
b100 8
b0 7
b0 6
bx 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b100 -
bx ,
bx +
b0 *
b0 )
b0 (
0'
1&
bx %
x$
b0 #
b0 "
b0 !
$end
#50
0&
#100
1&
#150
0&
#200
bx /
bx 3
b100 ,
b100 5
b100 <
b0 %
b0 +
b0 ;
0$
1'
1&
#250
0&
#300
b1000 ,
b1000 5
b1000 <
b1000 -
b1000 9
b1000 :
b100 .
b100 4
b100 6
b100 7
b100 !
b100 *
b100 2
bx #
bx (
bx 0
1&
#350
0&
#400
b1100 ,
b1100 5
b1100 <
b1100 -
b1100 9
b1100 :
b1000 .
b1000 4
b1000 6
b1000 7
b1000 !
b1000 *
b1000 2
b100 "
b100 )
b100 1
1&
#450
0&
#500
b10000 ,
b10000 5
b10000 <
b10000 -
b10000 9
b10000 :
b1100 .
b1100 4
b1100 6
b1100 7
b1100 !
b1100 *
b1100 2
b1000 "
b1000 )
b1000 1
1&
#550
0&
#600
b10100 ,
b10100 5
b10100 <
b10100 -
b10100 9
b10100 :
b10000 .
b10000 4
b10000 6
b10000 7
b10000 !
b10000 *
b10000 2
b1100 "
b1100 )
b1100 1
1&
#650
0&
#700
b11000 ,
b11000 5
b11000 <
b11000 -
b11000 9
b11000 :
b10100 .
b10100 4
b10100 6
b10100 7
b10100 !
b10100 *
b10100 2
b10000 "
b10000 )
b10000 1
1&
